"""–°–∫—Ä–∏–ø—Ç –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ—à–∏–±–∫–∏ Telegram Conflict."""
import os
import sys
import time
import requests
from dotenv import load_dotenv

def main():
    print("üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–∞ Telegram Bot...")
    print()
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º .env
    load_dotenv()
    token = os.getenv("TELEGRAM_BOT_TOKEN")
    
    if not token:
        print("‚ùå TELEGRAM_BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ .env")
        sys.exit(1)
    
    print(f"‚úÖ –¢–æ–∫–µ–Ω –Ω–∞–π–¥–µ–Ω: {token[:10]}...")
    print()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º webhook
    print("üìã –ü—Ä–æ–≤–µ—Ä–∫–∞ webhook...")
    try:
        response = requests.get(f"https://api.telegram.org/bot{token}/getWebhookInfo")
        webhook_info = response.json()
        
        if webhook_info.get("ok"):
            webhook_url = webhook_info.get("result", {}).get("url", "")
            
            if webhook_url:
                print(f"   ‚ö†Ô∏è  –û–±–Ω–∞—Ä—É–∂–µ–Ω webhook: {webhook_url}")
                print("   üîß –£–¥–∞–ª—è—é webhook...")
                
                delete_response = requests.get(
                    f"https://api.telegram.org/bot{token}/deleteWebhook",
                    params={"drop_pending_updates": True}
                )
                delete_result = delete_response.json()
                
                if delete_result.get("ok"):
                    print("   ‚úÖ Webhook —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω")
                else:
                    print(f"   ‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å webhook: {delete_result}")
            else:
                print("   ‚úÖ Webhook –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        else:
            print(f"   ‚ùå –û—à–∏–±–∫–∞ API: {webhook_info}")
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ webhook: {e}")
    
    print()
    
    # –û—á–∏—â–∞–µ–º pending updates
    print("üìã –û—á–∏—Å—Ç–∫–∞ pending updates...")
    try:
        response = requests.get(
            f"https://api.telegram.org/bot{token}/getUpdates",
            params={"offset": -1, "timeout": 1}
        )
        print("   ‚úÖ Pending updates –æ—á–∏—â–µ–Ω—ã")
    except Exception as e:
        print(f"   ‚ö†Ô∏è  –û—à–∏–±–∫–∞: {e}")
    
    print()
    
    # –ñ–¥–µ–º
    print("üìã –û–∂–∏–¥–∞–Ω–∏–µ –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–π...")
    for i in range(1, 11):
        print(f"   –ü–æ–ø—ã—Ç–∫–∞ {i}/10...")
        time.sleep(1)
    print("   ‚úÖ –ì–æ—Ç–æ–≤–æ")
    
    print()
    print("‚úÖ –í—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–∞–≤–µ—Ä—à–µ–Ω—ã!")
    print()
    print("üí° –¢–µ–ø–µ—Ä—å –∑–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç–∞:")
    print("   python bot.py")
    print()
    print("–ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –ø–æ–≤—Ç–æ—Ä—è–µ—Ç—Å—è:")
    print("   1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —á—Ç–æ –±–æ—Ç –Ω–µ –∑–∞–ø—É—â–µ–Ω –Ω–∞ –¥—Ä—É–≥–æ–º —Å–µ—Ä–≤–µ—Ä–µ/–∫–æ–º–ø—å—é—Ç–µ—Ä–µ")
    print("   2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —á—Ç–æ –Ω–µ—Ç –¥—Ä—É–≥–∏—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ python bot.py")
    print("   3. –ü–æ–¥–æ–∂–¥–∏—Ç–µ 1-2 –º–∏–Ω—É—Ç—ã –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞")
    print("   4. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–µ—Ç –ª–∏ —É –≤–∞—Å webhook –Ω–∞ —Ö–æ—Å—Ç–∏–Ω–≥–µ (Heroku, Railway –∏ —Ç.–¥.)")

if __name__ == "__main__":
    main()
