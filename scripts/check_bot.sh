#!/bin/bash
# –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ –±–æ—Ç–∞

# –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞
cd "$(dirname "$0")/.." || exit 1

echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ Funding Bot..."
echo ""

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–ø—É—â–µ–Ω –ª–∏ –±–æ—Ç
PIDS=$(ps aux | grep '[b]ot.py' | awk '{print $2}')

if [ -z "$PIDS" ]; then
    echo "‚ùå –ë–æ—Ç –ù–ï –∑–∞–ø—É—â–µ–Ω"
    echo ""
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ –æ—à–∏–±–∫–∏
    if [ -f "logs/errors.log" ]; then
        echo "üìÅ –ü–æ—Å–ª–µ–¥–Ω–∏–µ –æ—à–∏–±–∫–∏ (logs/errors.log):"
        tail -10 logs/errors.log
    fi
    
    exit 1
fi

echo "‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω"
echo ""

# –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–æ—Ü–µ—Å—Å–µ
echo "üìã –ü—Ä–æ—Ü–µ—Å—Å:"
ps aux | grep '[b]ot.py' | head -1
echo ""

for PID in $PIDS; do
    echo "  PID: $PID"
    
    # –í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã
    START_TIME=$(ps -p $PID -o lstart=)
    echo "  –ó–∞–ø—É—â–µ–Ω: $START_TIME"
    
    # –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø–∞–º—è—Ç–∏
    MEM=$(ps -p $PID -o %mem= | xargs)
    echo "  –ü–∞–º—è—Ç—å: ${MEM}%"
    
    # –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ CPU
    CPU=$(ps -p $PID -o %cpu= | xargs)
    echo "  CPU: ${CPU}%"
    echo ""
done

# –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–∞–∑–º–µ—Ä –ª–æ–≥–æ–≤
if [ -f "logs/bot.log" ]; then
    LOG_SIZE=$(du -h logs/bot.log | cut -f1)
    echo "üìÅ –†–∞–∑–º–µ—Ä bot.log: $LOG_SIZE"
fi

if [ -f "logs/errors.log" ]; then
    ERROR_SIZE=$(du -h logs/errors.log | cut -f1)
    ERROR_LINES=$(wc -l < logs/errors.log)
    echo "üìÅ –†–∞–∑–º–µ—Ä errors.log: $ERROR_SIZE ($ERROR_LINES —Å—Ç—Ä–æ–∫)"
fi

echo ""
echo "üí° –ö–æ–º–∞–Ω–¥—ã:"
echo "  scripts/stop_bot.sh     - –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –±–æ—Ç–∞"
echo "  tail -f logs/bot.log    - –°–º–æ—Ç—Ä–µ—Ç—å –ª–æ–≥–∏ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏"
echo "  tail -f logs/errors.log - –°–º–æ—Ç—Ä–µ—Ç—å –æ—à–∏–±–∫–∏ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏"
